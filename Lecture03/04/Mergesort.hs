{-
  Сортировка слиянием
-}
module Mergesort where

{-
  Функция сливает два упорядоченных списка, вообще говоря, неодинаковой длины.
  Аргументы:
    - два упорядоченных списка
  Результат:
    - упорядоченный список, содержащий элементы обоих аргументов
-}
merge :: Ord a => [a] -> [a] -> [a]
merge [] s2 = s2
merge s1 [] = s1
merge s1@(x1:t1) s2@(x2:t2) = if x1 < x2 then x1 : merge t1 s2
                                         else x2 : merge s1 t2

{-
  Реализует метод сортировки слиянием: список делится пополам, затем половины сортируются
  по отдельности, и, наконец, обе отсортированные половины сливаются в один список.
  Аргументы:
    - список из элементов класса Ord
  Результат:
    - упорядоченный список
-}
sort :: Ord a => [a] -> [a]
sort [] = []
sort s@[x] = s
sort s = merge (sort s1) (sort s2)
         where (s1,s2) = splitAt (length s `div` 2) s
